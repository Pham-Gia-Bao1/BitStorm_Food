"use client";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { useState, useEffect } from "react";
import { Button, Menu, Dropdown } from "antd";
import { SettingOutlined } from "@ant-design/icons";
import { useTheme, ThemeProvider as NextThemesProvider } from "next-themes";
import SideBar from "@/components/layout/sidebar/SideBar";
import SubSidebar from "@/components/layout/SubSideBar";
import Avatar from "@mui/material/Avatar";
import MainLogo from "@/components/logo/MainLogo";
import Header from "@/components/layout/Header";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const ThemeProvider = ({ children, ...props }: any) => {
  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;
};

const ModeToggle: React.FC = () => {
  const { theme, setTheme } = useTheme();
  const [currentTheme, setCurrentTheme] = useState<string>(theme || "dark");

  useEffect(() => {
    if (theme) {
      setCurrentTheme(theme);
    }
  }, [theme]);

  const handleMenuClick = ({ key }: { key: string }) => {
    setTheme(key);
    setCurrentTheme(key);
  };

  const menu = (
    <Menu onClick={handleMenuClick} selectedKeys={[currentTheme]}>
      <Menu.Item key="light">Light</Menu.Item>
      <Menu.Item key="dark">Dark</Menu.Item>
    </Menu>
  );

  return (
    <Dropdown overlay={menu} trigger={["click"]}>
      <Button icon={<SettingOutlined />} size="large">
        Theme: {currentTheme}
      </Button>
    </Dropdown>
  );
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { theme } = useTheme();
  return (
    <html lang="en" className={theme}>
      <body className={`${inter.className} ${theme}`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange
        >
          <div className={`flex ${theme}`}>
            <div className="flex flex-1 flex-col relative">
              <Header />
              <main className={`flex-1 flex  ${theme}`}>
                <div className={`z-30 fixed top-0 left-0 bottom-0 ${theme}`}>
                  <SideBar />
                </div>
                <div className={`flex-0 z-20 ml-20 fixed top-16 bottom-0 ${theme}`}>
                  <SubSidebar />
                </div>
                <div className={`flex-1 ml-72 pl-3 w-96 ${theme}`}>
                  {children}
                </div>
              </main>
            </div>
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}
